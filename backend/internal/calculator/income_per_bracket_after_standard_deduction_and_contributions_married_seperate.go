package calculator

type IncomePerBracketAfterStandardDeductionAndContributionsMarriedSeperateCalculation SequenceCalculation

type IncomePerBracketAfterStandardDeductionAndContributionsMarriedSeperate struct {
	AbstractIncomePerBracketAfterStandardDeductionAndContributionsCalculation
}

func NewIncomePerBracketAfterStandardDeductionAndContributionsMarriedSeperate() IncomePerBracketAfterStandardDeductionAndContributionsMarriedSeperate {
	return IncomePerBracketAfterStandardDeductionAndContributionsMarriedSeperate{
		AbstractIncomePerBracketAfterStandardDeductionAndContributionsCalculation: NewAbstractIncomePerBracketAfterStandardDeductionAndContributions(),
	}
}

func (c IncomePerBracketAfterStandardDeductionAndContributionsMarriedSeperate) Calculate(model Model) []float64 {
	return c.AbstractIncomePerBracketAfterStandardDeductionAndContributionsCalculation.Calculate(model, model.MarriedSeperateTaxRates)
}

func (c IncomePerBracketAfterStandardDeductionAndContributionsMarriedSeperate) CalculateRetirement(model Model) []float64 {
	return c.AbstractIncomePerBracketAfterStandardDeductionAndContributionsCalculation.CalculateRetirement(model, model.MarriedSeperateTaxRates)
}
