package calculator

type TotalTaxesOwedAfterStandardDeductionAndContributionsMarriedJointCalculation Calculation

type TotalTaxesOwedAfterStandardDeductionAndContributionsMarriedJoint struct {
	TaxesOwedPerBracketAfterStandardDeductionAndContributionsMarriedJointCalculation
}

func NewTotalTaxesOwedAfterStandardDeductionAndContributionsMarriedJoint() TotalTaxesOwedAfterStandardDeductionAndContributionsMarriedJoint {
	return TotalTaxesOwedAfterStandardDeductionAndContributionsMarriedJoint{
		TaxesOwedPerBracketAfterStandardDeductionAndContributionsMarriedJointCalculation: NewTaxesOwedPerBracketAfterStandardDeductionAndContributionsMarriedJoint(),
	}
}

func (c TotalTaxesOwedAfterStandardDeductionAndContributionsMarriedJoint) CalculateTraditional(model *Model) float64 {
	taxesOwedPerBracketAfterStandardDeductionAndContributionsMarriedJoint := c.TaxesOwedPerBracketAfterStandardDeductionAndContributionsMarriedJointCalculation.CalculateTraditional(model)

	totalTaxesOwedPerBracketAfterStandardDeductionAndContributionsMarriedJoint := 0.0
	for _, value := range taxesOwedPerBracketAfterStandardDeductionAndContributionsMarriedJoint {
		totalTaxesOwedPerBracketAfterStandardDeductionAndContributionsMarriedJoint += value
	}

	return totalTaxesOwedPerBracketAfterStandardDeductionAndContributionsMarriedJoint
}

func (c TotalTaxesOwedAfterStandardDeductionAndContributionsMarriedJoint) CalculateTraditionalRetirement(model *Model) float64 {
	return c.CalculateTraditional(model)
}

func (c TotalTaxesOwedAfterStandardDeductionAndContributionsMarriedJoint) CalculateRoth(model *Model) float64 {
	taxesOwedPerBracketAfterStandardDeductionAndContributionsMarriedJoint := c.TaxesOwedPerBracketAfterStandardDeductionAndContributionsMarriedJointCalculation.CalculateRoth(model)

	totalTaxesOwedPerBracketAfterStandardDeductionAndContributionsMarriedJoint := 0.0
	for _, value := range taxesOwedPerBracketAfterStandardDeductionAndContributionsMarriedJoint {
		totalTaxesOwedPerBracketAfterStandardDeductionAndContributionsMarriedJoint += value
	}

	return totalTaxesOwedPerBracketAfterStandardDeductionAndContributionsMarriedJoint
}

func (c TotalTaxesOwedAfterStandardDeductionAndContributionsMarriedJoint) CalculateRothRetirement(model *Model) float64 {
	return c.CalculateRoth(model)
}
