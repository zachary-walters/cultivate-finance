package calculator

type IncomePerBracketAfterStandardDeductionAndContributionsMarriedJointCalculation SequenceCalculation

type IncomePerBracketAfterStandardDeductionAndContributionsMarriedJoint struct {
	AbstractIncomePerBracketAfterStandardDeductionAndContributionsCalculation
}

func NewIncomePerBracketAfterStandardDeductionAndContributionsMarriedJoint() IncomePerBracketAfterStandardDeductionAndContributionsMarriedJoint {
	return IncomePerBracketAfterStandardDeductionAndContributionsMarriedJoint{
		AbstractIncomePerBracketAfterStandardDeductionAndContributionsCalculation: NewAbstractIncomePerBracketAfterStandardDeductionAndContributions(),
	}
}

func (c IncomePerBracketAfterStandardDeductionAndContributionsMarriedJoint) Calculate(model Model) []float64 {
	return c.AbstractIncomePerBracketAfterStandardDeductionAndContributionsCalculation.Calculate(model, model.MarriedJointTaxRates)
}

func (c IncomePerBracketAfterStandardDeductionAndContributionsMarriedJoint) CalculateRetirement(model Model) []float64 {
	return c.AbstractIncomePerBracketAfterStandardDeductionAndContributionsCalculation.CalculateRetirement(model, model.MarriedJointTaxRates)
}
